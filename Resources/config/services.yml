parameters:

    ccdn_user_security.component.listener.route_referer_listener.class:     CCDNUser\SecurityBundle\Component\Listener\RouteRefererListener
    ccdn_user_security.component.listener.blocking_login_listener.class:    CCDNUser\SecurityBundle\Component\Listener\BlockingLoginListener

    ccdn_user_security.component.authorisation.voter.client_login_voter.class:        CCDNUser\SecurityBundle\Component\Authorisation\Voter\ClientLoginVoter

    ccdn_user_security.component.authentication.tracker.login_failure_tracker.class:    CCDNUser\SecurityBundle\Component\Authentication\Tracker\LoginFailureTracker

    ccdn_user_security.component.authentication.handler.login_failure_handler.class:  CCDNUser\SecurityBundle\Component\Authentication\Handler\LoginFailureHandler
    ccdn_user_security.component.authentication.handler.login_success_handler.class:  CCDNUser\SecurityBundle\Component\Authentication\Handler\LoginSuccessHandler
    ccdn_user_security.component.authentication.handler.logout_success_handler.class: CCDNUser\SecurityBundle\Component\Authentication\Handler\LogoutSuccessHandler

    ccdn_user_security.session.repository.class: CCDNUser\SecurityBundle\Repository\SessionRepository

    ccdn_user_security.session.manager.class:    CCDNUser\SecurityBundle\Manager\SessionManager


services:

    #
    # Referer Listener.
    #
    ccdn_user_security.component.listener.route_referer_listener:
        class:      %ccdn_user_security.component.listener.route_referer_listener.class%
        arguments:  [@service_container, @router]
        tags:
            -       { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    ccdn_user_security.component.listener.blocking_login_listener:
        class:      %ccdn_user_security.component.listener.blocking_login_listener.class%
        arguments:  [@service_container, @router]
        tags:
            -       { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    #
    # Authorisation Voter
    #
    ccdn_user_security.component.authorisation.voter.client_login_voter:
        class:      %ccdn_user_security.component.authorisation.voter.client_login_voter.class%
        arguments:  [@service_container, []]
        public:     false
        tags:
            -       { name: security.voter }

    ccdn_user_security.component.authentication.tracker.login_failure_tracker:
        class:      %ccdn_user_security.component.authentication.tracker.login_failure_tracker.class%
        arguments:  [@service_container]

    #
    # Login/Logout Success/Failure Handlers.
    #
    ccdn_user_security.component.authentication.handler.login_failure_handler:
        class:      %ccdn_user_security.component.authentication.handler.login_failure_handler.class%
        arguments:  [@service_container, @router, @security.context]
        tags:
            -       { name: 'monolog.logger', channel: 'security' }
    ccdn_user_security.component.authentication.handler.login_success_handler:
        class:      %ccdn_user_security.component.authentication.handler.login_success_handler.class%
        arguments:  [@router, @security.context]
        tags:
            -       { name: 'monolog.logger', channel: 'security' }
    ccdn_user_security.component.authentication.handler.logout_success_handler:
        class:      %ccdn_user_security.component.authentication.handler.logout_success_handler.class%
        arguments:  []
        tags:
            -       { name: 'monolog.logger', channel: 'security' }

    #
    # Repositories.
    #
    ccdn_user_security.session.repository:
        class:              %ccdn_user_security.session.repository.class%
        factory_service:    doctrine.orm.default_entity_manager
        factory_method:     getRepository
        arguments:
            -               'CCDNUser\SecurityBundle\Entity\Session'

    #
    # Managers.
    #
    ccdn_user_security.session.manager:
        class:      %ccdn_user_security.session.manager.class%
        arguments:  [@doctrine]
